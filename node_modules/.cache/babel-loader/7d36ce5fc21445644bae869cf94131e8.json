{"remainingRequest":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\src\\views\\system\\dept\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\src\\views\\system\\dept\\index.vue","mtime":1606099152526},{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!--字典类型页面-->\n<template>\n  <div class=\"app-container\">\n    <!--查询条件开始-->\n    <!--\n      ref:\n      model:绑定查询条件部分的数据绑定,与queryParams有关,点击查询按钮时,将查询参数传递到后台\n      inline:变为行内域\n      label-width:设置每个标签的宽度,指定在el-form上时,其直接子标签form-item会继承该值\n    -->\n    <el-form ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\" label-width=\"68px\">\n      <el-form-item label=\"科室名称\" prop=\"deptName\">\n        <!--input输入框\n          v-model:指定与queryParams中哪个属性进行动态绑定\n          placeholder:输入框内默认填充的数据,获得焦点后消失\n          clearable:是否可以一键清除\n          size:输入框大小,影响内容大小\n        -->\n        <el-input\n          v-model=\"queryParams.deptName\"\n          placeholder=\"请输入科室名称\"\n          clearable\n          size=\"small\"\n          style=\"width:140px\"\n        />\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <!--select下拉框-->\n        <el-select\n          v-model=\"queryParams.status\"\n          placeholder=\"字典状态\"\n          clearable\n          size=\"small\"\n          style=\"width:140px\"\n        >\n          <!--下拉框内容,遍历statusOptions属性,这里面保存了查询的状态的码表\n            key:唯一标注\n            label:标签\n            value:实际存储的值\n          -->\n          <el-option\n            v-for=\"dict in statusOptions\"\n            :key=\"dict.dictValue\"\n            :label=\"dict.dictLabel\"\n            :value=\"dict.dictValue\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"创建时间\">\n        <!--date-picker:日期选择框\n          value-format:日期格式\n          type:类型,这里是可以选取范围数据\n          range-separator:分隔符,页面显示中会把开始日期和结束日期用该符号分割开\n          start-placeholder:第一个空的默认显示内容\n          end-placeholder:第二个空的默认显示内容\n        -->\n        <el-date-picker\n          v-model=\"dateRange\"\n          size=\"small\"\n          style=\"width:280px\"\n          value-format=\"yyyy-MM-dd\"\n          type=\"daterange\"\n          range-separator=\"-\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <!--查询和清空按钮-->\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">查询</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">清空</el-button>\n      </el-form-item>\n    </el-form>\n    <!--查询条件结束-->\n    <!--操作栏按钮开始-->\n    <!--el-row:表示一行数据\n      gutter:每一栏之间的间隔\n    -->\n    <el-row :gutter=\"10\" style=\"margin-bottom: 8px;\">\n      <!--el-col:表示一列\n        span:指定该列所占的宽度,最大指定为24\n      -->\n      <el-col :span=\"1.5\">\n        <!--新增按钮:尺寸mini-->\n        <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\">新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <!--修改按钮:只有在选中一条记录的时候,才会处于可用状态-->\n        <el-button type=\"success\" icon=\"el-icon-edit\" size=\"mini\" :disabled=\"!single\" @click=\"handleUpdate\">修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <!--删除按钮,只要有选中数据就可用,不管一条还是多条-->\n        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" :disabled=\"!multiple\" @click=\"handleDelete\">批量删除</el-button>\n      </el-col>\n    </el-row>\n    <!--操作栏按钮结束-->\n    <!--数据列表开始-->\n    <!--el-table:数据列表\n      v-loading:v-loading在接口未请求到数据之前，显示加载中，直到请求到数据后消失\n      border:表示有边框\n      data:数据列表中显示的数据从哪获取\n      @selection-change:当选择项发生变化时会触发该事件\n    -->\n    <el-table v-loading=\"loading\" border :data=\"deptTableList\" @selection-change=\"handleSelectionChnage\">\n      <!--el-table-column:每一行中的每一列\n        prop:对应从:data中取出的数据\n        align:对齐方式\n        label:列名\n        show-overflow-tooltip:默认情况下数据过长不够显示的时候是换行显示,如果需要单行显示,可以使用这个,并且当鼠标移动到此处时会显示实际内容的提示信息\n      -->\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"科室ID\" prop=\"deptId\" align=\"center\" />\n      <el-table-column label=\"科室名称\" prop=\"deptName\" align=\"center\"/>\n      <el-table-column label=\"科室编号\" prop=\"deptNumber\" align=\"center\"/>\n      <el-table-column label=\"科室挂号量\" prop=\"regNumber\" align=\"center\"/>\n      <el-table-column label=\"负责人\" prop=\"deptLeader\" align=\"center\"/>\n      <el-table-column label=\"联系电话\" prop=\"contactPhone\" align=\"center\"/>\n      <!--formatter:用于按照指定要求来格式化此处需要显示的值,显示在列表中的数据是经过statusFormatter处理后的内容-->\n      <el-table-column label=\"状态\" prop=\"status\" align=\"center\" :formatter=\"statusFormatter\" />\n      <el-table-column label=\"创建时间\" prop=\"createTime\" align=\"center\" width=\"180\" />\n      <el-table-column label=\"操作\" align=\"center\">\n        <!--slot-scope=\"scope\" 取到当前单元格-->\n        <template slot-scope=\"scope\">\n          <!--传递该条数据到具体处理方法中-->\n          <el-button type=\"text\" icon=\"el-icon-edit\" size=\"mini\" @click=\"handleUpdate(scope.row)\">修改</el-button>\n          <el-button type=\"text\" icon=\"el-icon-delete\" size=\"mini\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!--数据列表结束-->\n    <!--底部分页开始-->\n    <!--pagination:分页控件\n      v-show:控制是否显示分页控件的条件,当数据列表中数据不为空才显示\n      current-page:当前显示第几页\n      page-sizes:可选的每页显示条数\n      page-size:默认每页显示条数\n      layout:设置分页格式:总数,每页条数,前一页,当前页,下一页,跳转至某一页\n      total:总数\n      @size-change:改变每页显示条数后触发方法\n      @current-change:当前页发生改变的时候触发的方法\n    -->\n    <el-pagination\n      v-show=\"total>0\"\n      :current-page=\"queryParams.pageNum\"\n      :page-sizes=\"[5, 10, 20, 30]\"\n      :page-size=\"queryParams.pageSize\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"total\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    />\n    <!--底部分页结束-->\n    <!--新增和修改模态框开始-->\n    <!--dialog:对话框\n      title:模态框标题\n      visible.sync:表示是否显示\n      center:居中\n      append-to-body:如果需要在一个对话框内部嵌套另一个对话框，需要使用append-to-body属性\n    -->\n    <el-dialog\n      :title=\"title\"\n      :visible.sync=\"open\"\n      width=\"500px\"\n      center\n      append-to-body\n    >\n      <!--添加和修改的表单\n        rules:做表单数据前端校验\n        label-width:标签宽度(文字)\n      -->\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"科室名称\" prop=\"deptName\">\n          <el-input v-model=\"form.deptName\" placeholder=\"请输入科室名称\" clearable size=\"small\" />\n        </el-form-item>\n        <el-form-item label=\"科室编号\" prop=\"deptNumber\">\n          <el-input v-model=\"form.deptNumber\" placeholder=\"请输入科室编号\" clearable size=\"small\" />\n        </el-form-item>\n        <el-form-item label=\"挂号编号\" prop=\"regNumber\">\n          <el-input-number v-model=\"form.regNumber\" placeholder=\"请输入挂号编号\" clearable size=\"small\" />\n        </el-form-item>\n        <el-form-item label=\"负责人\" prop=\"deptLeader\">\n          <el-input v-model=\"form.deptLeader\" placeholder=\"请输入负责人\" clearable size=\"small\" />\n        </el-form-item>\n        <el-form-item label=\"联系电话\" prop=\"contactPhone\">\n          <el-input v-model=\"form.contactPhone\" placeholder=\"请输入联系电话\" clearable size=\"small\" />\n        </el-form-item>\n        <el-form-item label=\"显示顺序\" prop=\"orderNum\">\n          <el-input-number v-model=\"form.orderNum\" placeholder=\"请输入显示顺序\" clearable size=\"small\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <!--单选框-->\n          <el-radio-group v-model=\"form.status\">\n            <el-radio\n              v-for=\"dict in statusOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictValue\"\n              :value=\"dict.dictValue\"\n            >{{ dict.dictLabel }}</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"handleSubmit\">保 存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <!--新增和修改模态框结束-->\n  </div>\n</template>\n\n<script>\n// 引入字典类型相关api\nimport { updateDept, listForPage, deleteDeptByIds, getDeptById, addDept } from '@/api/system/dept/dept'\nexport default {\n  name: 'Dept',\n  data() {\n    return {\n      // 是否启用遮罩层,请求后台时出现进度条(如果请求响应很快的话,可能看不到)\n      // 体现在页面上就是一个页面中心一个转圈的显示\n      loading: false,\n      // 选中的字典类型的id集合\n      ids: [],\n      // 判断是否选中了单条记录,进而控制一些页面行为,比如选中了单个可以进行修改操作\n      single: false,\n      // 判断是否选中了多条记录,进行控制一些页面行为,比如选中了多个可以进行批量删除操作\n      multiple: false,\n      // 分页数据总条数\n      total: 0,\n      // 数据列表中数据(字典类型)\n      deptTableList: [],\n      // 模态框的标题\n      title: '',\n      // 是否显示模态框\n      open: false,\n      // 查询条件中状态的码表(正常,停用)\n      statusOptions: [],\n      // 查询条件中选择的日期范围数据\n      dateRange: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1, // 默认第一页\n        pageSize: 10, // 每页默认10条\n        deptName: undefined, // 科室名称\n        status: undefined // 科室状态\n      },\n      // 表单数据(添加和修改的模态框中的数据)\n      form: {},\n      // 表单校验(前端校验,失去焦点就会触发)\n      // 给对应属性添加必填校验之后,会在label处显示*号\n      // ------------\n      rules: {\n        // 科室名称\n        deptName: [\n          { required: true, message: '科室名称不能为空', trigger: 'blur' }\n        ],\n        // 挂号编号\n        regNumber: [\n          { required: true, message: '挂号编号不能为空', trigger: 'blur' }\n        ]\n        // 下面这两个不用写，使用的组件默认也有值\n        // 科室编号\n        // deptNumber: [\n        //   { required: true, message: '科室编号不能为空', trigger: 'blur' }\n        // ],\n        // // 显示顺序\n        // orderNum: [\n        //   { required: true, message: '显示顺序不能为空', trigger: 'blur' }\n        // ]\n      }\n    }\n  },\n  // 生命周期,钩子函数  在实例创建完成后被立即调用\n  created() {\n    // 加载页面时,需要进行初始化数据,调用查询数据列表的方法\n    this.getDeptList()\n    // 使用全局的根据字典类型查询字典数据的方法来获取查询条件中的状态信息\n    this.getDataByType('sys_normal_disable').then(res => {\n      // 将查询到的状态信息保存到当前页面对应的属性中\n      this.statusOptions = res.data\n    })\n  },\n  methods: {\n    // 查询数据列表数据\n    getDeptList() {\n      // 打开遮罩\n      this.loading = true\n      // 调用分页查询的api方法\n      // listForPage(this.queryParams).then(res => {\n      // 通过addDateRange封装起始时间和结束时间\n      listForPage(this.addDateRange(this.queryParams, this.dateRange)).then(res => {\n        // 将分页数据传递给数据类表绑定的data数据\n        this.deptTableList = res.data\n        // 查询到数据了,就要显示分页了\n        this.total = res.total\n        // 关闭遮罩\n        this.loading = false\n      })\n    },\n    // 查询操作\n    handleQuery() {\n      // 执行实际的查询方法\n      // 因为输入的查询条件实时与queryParams动态绑定\n      this.getDeptList()\n    },\n    // 清空查询条件操作\n    resetQuery() {\n      // 清空查询数据\n      this.resetForm('queryForm')\n      // 清空查询条件中选择的日期数据\n      this.dateRange = []\n      // 重新查询数据列表,相当于执行一次无查询条件的查询操作,如果不调用这个方法,那么清空操作后,数据列表不会同步改变\n      this.getDeptList()\n    },\n    // 添加操作,打开添加模态框\n    handleAdd() {\n      // 打开模态框\n      this.open = true\n      // 重置表单\n      this.reset()\n    },\n    // 修改操作,打开修改模态框\n    handleUpdate(row) {\n      // 如果是点击数据列表上方的修改按钮时，是不会传递row数据的\n      // 如果是点击每行记录后面的修改链接时可以拿到row数据\n      // 如果row.deptId为undefined，那么就表示点击的是修改按钮，因此要ids的第一个数据就是选中的要修改的数据\n      // 然后将该deptId作为查询条件向后台发送请求即可\n      // const deptId = row.deptId === undefined ? this.ids[0] : row.deptId\n      // 下面这种方式，如果是点击修改按钮得到的数据，那么deptId是一个仅有一个值的数组，传递到后台也可以匹配参数\n      // js利用|| 或者 && 简便赋值方式\n      const deptId = row.deptId || this.ids\n      // 打开模态框\n      this.open = true\n      // 重置表单\n      this.reset()\n      // 根据id查询对应字典类型，并填充到form中\n      // 这里通过id查询到的数据是一整条数据，填充到了form中，并不影响\n      // getDictTypeById(row.deptId).then(res => {\n      getDeptById(deptId).then(res => {\n        this.form = res.data\n      })\n      // 优化点，row已经是一整条数据了，为啥还要走后台查询呢？\n      // this.form = row\n    },\n    // 删除操作(含批量)\n    handleDelete(row) {\n      // 根据row.deptId是否为undefined来判断是批量删除还是单个删除\n      // const deptId = row.deptId === undefined ? this.ids : row.deptId\n      // const deptId = row.deptId === undefined ? this.ids[0] : row.deptId\n      // 下面这种方式，如果是点击删除按钮得到的数据，那么deptId是一个含有多个值的数组，传递到后台也可以匹配参数\n      // js利用|| 或者 && 简便赋值方式\n      const deptId = row.deptId || this.ids\n      // 确认框显示\n      this.$confirm('此操作将永久删除该科室信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 开启遮罩\n        this.loading = true\n        // 调用api执行删除操作\n        deleteDeptByIds(deptId).then(res => {\n          // 关闭遮罩\n          this.loading = false\n          // 操作成功提示\n          this.msgSuccess('删除成功')\n          // 重新查询数据列表\n          this.getDeptList()\n        })\n      }).catch(() => {\n        // 关闭遮罩\n        this.loading = false\n        // 操作失败提示\n        this.msgInfo('取消删除操作')\n      })\n    },\n    // 改变数据列表第一列多选框选中状态所触发的方法,selection为选择的内容\n    handleSelectionChnage(selection) {\n      // selection保存着勾选的一条数据，以数组形式存储，对象为一个单位\n      this.single = selection.length === 1\n      this.multiple = selection.length > 1\n      // 保存勾选的数据的id  item表示取出数组中一个数据，然后获取到该条数据的id，遍历完成后，ids拿到所有勾选的id\n      this.ids = selection.map(item => item.deptId)\n    },\n    // 转换字典数据(code值与实际显示值)\n    statusFormatter(row) {\n      return this.transferDictCode(this.statusOptions, row.status)\n    },\n    // 改变每页显示条数的时候触发\n    handleSizeChange(val) {\n      // 更新每页显示条数\n      this.queryParams.pageSize = val\n      // 重新查询\n      this.getDeptList()\n    },\n    // 当前页改变时触发(前一页,点击某一页,下一页,跳转某一页)\n    handleCurrentChange(val) {\n      // 更新需要显示的第几页数\n      this.queryParams.pageNum = val\n      // 重新查询\n      this.getDeptList()\n    },\n    // 模态框  保存按钮\n    /**\n     * 因为新增和修改操作都是打开同一个模态框\n     * 因此点击保存按钮时，需要区分执行的是新增操作还是修改操作\n     *    个人想法：根据this.form.deptId来区分\n     *              如果this.form.deptId不存在那么就是新增，因为deptId会在后台生成\n     *               否则为修改操作\n     */\n    handleSubmit() {\n      // 打开遮罩\n      this.loading = true\n      if (this.form.deptId === undefined) {\n        // 添加操作\n        // 表单前端校验，如果不通过就不会执行后端方法\n        this.$refs['form'].validate((valid) => {\n          if (valid) { // 通过校验\n            // 调用保存字典类型的api，调用引入的api不可以使用this.xxx,因为不是当前页面的方法\n            addDept(this.form).then(res => {\n              // 显示保存成功的消息,调用全局消息\n              this.msgSuccess('保存成功')\n              // 关闭遮罩\n              this.loading = false\n              // 列表数据重新查询\n              this.getDeptList()\n              // 关闭模态框\n              this.open = false\n            }).catch(() => {\n              // 出现异常的处理方式\n              // 已经通过响应拦截器处理了该类型的异常，并显示了提示信息\n              // 关闭遮罩\n              this.loading = false\n            })\n          } else {\n            this.msgError('数据校验不通过')\n            this.loading = false\n          }\n        })\n      } else {\n        // 修改操作\n        // 表单前端校验，如果不通过就不会执行后端方法\n        this.$refs['form'].validate((valid) => {\n          if (valid) {\n            updateDept(this.form).then(res => {\n              // 显示修改成功的消息,调用全局消息\n              this.msgSuccess('修改成功')\n              // 关闭遮罩\n              this.loading = false\n              // 列表数据重新查询\n              this.getDeptList()\n              // 关闭模态框\n              this.open = false\n            }).catch(() => {\n              // 出现异常的处理方式\n              // 已经通过响应拦截器处理了该类型的异常，并显示了提示信息\n              // 关闭遮罩\n              this.loading = false\n            })\n          } else {\n            this.msgError('数据校验不通过')\n            this.loading = false\n          }\n        })\n      }\n    },\n    // 模态框  取消按钮\n    cancel() {\n      // 设置open为false,表示关闭模态框\n      this.open = false\n    },\n    // 重置表单\n    reset() {\n      // 设置初始值\n      this.form = {\n        deptId: undefined,\n        deptName: undefined,\n        deptLeader: undefined,\n        deptNumber: undefined,\n        orderNum: 0,\n        regNumber: 0,\n        status: '0' // 默认选中正常状态\n      }\n      // 重置表单,对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\n      this.resetForm('form')\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/system/dept"}]}