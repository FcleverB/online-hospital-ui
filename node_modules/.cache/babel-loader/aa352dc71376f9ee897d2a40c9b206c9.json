{"remainingRequest":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\src\\utils\\request.js","dependencies":[{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\src\\utils\\request.js","mtime":1606651841378},{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\IdeaProjects\\LastTerminal\\Front\\online-hospital-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2VCb3gsIE1lc3NhZ2UsIE5vdGlmaWNhdGlvbiB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7CmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsgLy8g5Yib5bu65LiA5LiqYXhpb3Plrp7kvosKCnZhciBzZXJ2aWNlID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfQVBJLAogIC8vIOWunumZheWPkemAgeeahFVSTD1iYXNlVVJMICArICDor7fmsYLphY3nva7nmoR1cmwgIO+8iGJhc2VVUkzlvZPliY3lsLHmmK8vZGV2LWFwaQogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8gc2VuZCBjb29raWVzIHdoZW4gY3Jvc3MtZG9tYWluIHJlcXVlc3RzCiAgdGltZW91dDogNTAwMCAvLyDorr7nva7or7fmsYLotoXml7bml7bpl7QKCn0pOyAvLyDor7fmsYLmi6bmiKrlmagKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyDlnKjlj5HpgIHor7fmsYLkuYvliY3lgZrnmoTkuovmg4UKICBpZiAoc3RvcmUuZ2V0dGVycy50b2tlbikgewogICAgLy8g6K6p5q+P5LiA5Liq6K+35rGC5Lit6YO95pC65bimdG9rZW4KICAgIC8vIOOAkOKAmFgtVG9rZW7igJnjgJHmmK/kuIDkuKroh6rlrprkuYnnmoRoZWFkZXLkuK3nmoRrZXkKICAgIC8vIOWPr+S7peagueaNruWunumZheaDheWGteaUueWPmOWugwogICAgLy8g6L+Z6YeM55qEdG9rZW7lkI3np7DopoHlkozlkI7nq6/kv53mjIHkuIDoh7QKICAgIGNvbmZpZy5oZWFkZXJzWyd0b2tlbiddID0gZ2V0VG9rZW4oKTsKICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIOW9k+ivt+axguWHuueOsOmXrumimOaXtuaJgOWBmueahOS4gOS6m+S6i+aDhQogIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyDlk43lupTmi6bmiKrlmagKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgKLyoqCiAqIOWmguaenOS9oOaDs+imgeW+l+WIsOivuOWmguivt+axguWktOaIluiAheeKtuaAgeeahGh0dHDkv6Hmga8KICog6K+36L+U5ZueICByZXNwb25zZSA9PiByZXNwb25zZQogKi8KCi8qKgogKiDpgJrov4foh6rlrprkuYnnoIHmnaXlhrPlrpror7fmsYLnirbmgIEKICog6L+Z6YeM5LuF5LuF5piv5LiA5Liq5L6L5a2QCiAqIOS9oOWQjOagt+S5n+WPr+S7peagueaNrmh0dHDnmoTnirbmgIHnoIHmnaXlhrPlrprov5nkuKrnirbmgIEKICogQHBhcmFtIHJlc3BvbnNlCiAqIEByZXR1cm5zIHthbnl8UHJvbWlzZTxBeGlvc1Jlc3BvbnNlPGFueT4+fQogKi8KZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgLyoqCiAgICog6aG555uu5Lit5a2Y5Zyo55qE54q25oCB56CBCiAgICogNDAw77ya5Y+C5pWw5a2Y5Zyo6Zeu6aKYCiAgICogNDAx77ya5pyq5o6I5p2DCiAgICogNTAw77ya57O757uf5YaF6YOo6ZSZ6K+vCiAgICogMjAw77ya5pON5L2c5oiQ5YqfCiAgICovCiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vIHJlc3BvbnNlLmRhdGHmiY3mmK/lkI7lj7Dov5Tlm57nu5nmiJHku6znmoTmlbDmja4KCiAgaWYgKHJlcy5jb2RlID09PSA0MDEpIHsKICAgIC8vIOacquaOiOadg++8jOi6q+S7vei/h+acnyAg5LiA5Liq5by55Ye65qGGCiAgICBNZXNzYWdlQm94LmNvbmZpcm0oJ+eUqOaIt+eZu+W9lei6q+S7veW3sui/h+acn++8jOivt+mHjeaWsOeZu+W9lScsICfns7vnu5/mj5DnpLonLCB7CiAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn6YeN5paw55m75b2VJywKICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHN0b3JlLmRpc3BhdGNoKCd1c2VyL2xvZ291dCcpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIC8vIOi3s+i9rOWIsOeZu+W9lemhtemdoumHjeaWsOeZu+W9lQogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICB9KTsKICAgIH0pOwogIH0gZWxzZSBpZiAocmVzLmNvZGUgPT09IDUwMCkgewogICAgTm90aWZpY2F0aW9uLmVycm9yKHsKICAgICAgdGl0bGU6ICfplJnor6/kv6Hmga8nLAogICAgICBtZXNzYWdlOiAn5pyN5Yqh5Zmo5YaF6YOo5Ye6546w5byC5bi477yM6K+36IGU57O7566h55CG5ZGYJywKICAgICAgdXJhdGlvbjogMzAwMAogICAgfSk7CiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ2Vycm9yJyk7IC8vIOiusOW9lemUmeivrwogIH0gZWxzZSBpZiAocmVzLmNvZGUgPT09IDQwMCkgewogICAgLy8g5Y+v6IO95piv5YW25LuW5Y+C5pWw5Ye66ZSZCiAgICBOb3RpZmljYXRpb24uZXJyb3IoewogICAgICB0aXRsZTogJ+mUmeivr+S/oeaBrycsCiAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgIGR1cmF0aW9uOiAzMDAwCiAgICB9KTsKICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnZXJyb3InKTsgLy8g6K6w5b2V6ZSZ6K+vCiAgfSBlbHNlIHsKICAgIC8vIOS7peS4iumqjOivgemAmui/h+S5i+WQjuaUvuihjAogICAgcmV0dXJuIHJlczsKICB9IC8vIOWmguaenOWTjeW6lOeahGNvZGXlgLzkuI3mmK8yMDDvvIzpgqPkuYjlsLHliKTliKvkuLrkuIDkuKplcnJvcgogIC8vIGlmIChyZXMuY29kZSAhPT0gMjAwKSB7CiAgLy8gICBNZXNzYWdlKHsKICAvLyAgICAgbWVzc2FnZTogcmVzLm1lc3NhZ2UgfHwgJ0Vycm9yJywKICAvLyAgICAgdHlwZTogJ2Vycm9yJywKICAvLyAgICAgZHVyYXRpb246IDUgKiAxMDAwCiAgLy8gICB9KQogIC8vCiAgLy8gICAvLyA1MDAwODogSWxsZWdhbCB0b2tlbjsgNTAwMTI6IE90aGVyIGNsaWVudHMgbG9nZ2VkIGluOyA1MDAxNDogVG9rZW4gZXhwaXJlZDsKICAvLyAgIGlmIChyZXMuY29kZSA9PT0gNTAwMDggfHwgcmVzLmNvZGUgPT09IDUwMDEyIHx8IHJlcy5jb2RlID09PSA1MDAxNCkgewogIC8vICAgICAvLyB0byByZS1sb2dpbgogIC8vICAgICBNZXNzYWdlQm94LmNvbmZpcm0oJ1lvdSBoYXZlIGJlZW4gbG9nZ2VkIG91dCwgeW91IGNhbiBjYW5jZWwgdG8gc3RheSBvbiB0aGlzIHBhZ2UsIG9yIGxvZyBpbiBhZ2FpbicsICdDb25maXJtIGxvZ291dCcsIHsKICAvLyAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ1JlLUxvZ2luJywKICAvLyAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywKICAvLyAgICAgICB0eXBlOiAnd2FybmluZycKICAvLyAgICAgfSkudGhlbigoKSA9PiB7CiAgLy8gICAgICAgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpLnRoZW4oKCkgPT4gewogIC8vICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCkKICAvLyAgICAgICB9KQogIC8vICAgICB9KQogIC8vICAgfQogIC8vICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXMubWVzc2FnZSB8fCAnRXJyb3InKSkKICAvLyB9IGVsc2UgewogIC8vICAgcmV0dXJuIHJlcwogIC8vIH0KCn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgTWVzc2FnZSh7CiAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLAogICAgdHlwZTogJ2Vycm9yJywKICAgIGR1cmF0aW9uOiA1ICogMTAwMAogIH0pOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["G:/IdeaProjects/LastTerminal/Front/online-hospital-ui/src/utils/request.js"],"names":["axios","MessageBox","Message","Notification","store","getToken","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","getters","token","headers","error","console","log","Promise","reject","response","res","data","code","confirm","confirmButtonText","cancelButtonText","type","then","dispatch","location","reload","title","message","uration","msg","duration"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { MessageBox, Message, Notification } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/auth'\n\n// 创建一个axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API, // 实际发送的URL=baseURL  +  请求配置的url  （baseURL当前就是/dev-api\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 // 设置请求超时时间\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    // 在发送请求之前做的事情\n    if (store.getters.token) {\n      // 让每一个请求中都携带token\n      // 【‘X-Token’】是一个自定义的header中的key\n      // 可以根据实际情况改变它\n      // 这里的token名称要和后端保持一致\n      config.headers['token'] = getToken()\n    }\n    return config\n  },\n  error => {\n    // 当请求出现问题时所做的一些事情\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  /**\n   * 如果你想要得到诸如请求头或者状态的http信息\n   * 请返回  response => response\n   */\n  /**\n   * 通过自定义码来决定请求状态\n   * 这里仅仅是一个例子\n   * 你同样也可以根据http的状态码来决定这个状态\n   * @param response\n   * @returns {any|Promise<AxiosResponse<any>>}\n   */\n  response => {\n    /**\n     * 项目中存在的状态码\n     * 400：参数存在问题\n     * 401：未授权\n     * 500：系统内部错误\n     * 200：操作成功\n     */\n    const res = response.data // response.data才是后台返回给我们的数据\n    if (res.code === 401) {\n      // 未授权，身份过期  一个弹出框\n      MessageBox.confirm('用户登录身份已过期，请重新登录', '系统提示', {\n        confirmButtonText: '重新登录',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        store.dispatch('user/logout').then(() => { // 跳转到登录页面重新登录\n          location.reload()\n        })\n      })\n    } else if (res.code === 500) {\n      Notification.error({\n        title: '错误信息',\n        message: '服务器内部出现异常，请联系管理员',\n        uration: 3000\n      })\n      return Promise.reject('error') // 记录错误\n    } else if (res.code === 400) { // 可能是其他参数出错\n      Notification.error({\n        title: '错误信息',\n        message: res.msg,\n        duration: 3000\n      })\n      return Promise.reject('error') // 记录错误\n    } else {\n      // 以上验证通过之后放行\n      return res\n    }\n    // 如果响应的code值不是200，那么就判别为一个error\n    // if (res.code !== 200) {\n    //   Message({\n    //     message: res.message || 'Error',\n    //     type: 'error',\n    //     duration: 5 * 1000\n    //   })\n    //\n    //   // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n    //   if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n    //     // to re-login\n    //     MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n    //       confirmButtonText: 'Re-Login',\n    //       cancelButtonText: 'Cancel',\n    //       type: 'warning'\n    //     }).then(() => {\n    //       store.dispatch('user/resetToken').then(() => {\n    //         location.reload()\n    //       })\n    //     })\n    //   }\n    //   return Promise.reject(new Error(res.message || 'Error'))\n    // } else {\n    //   return res\n    // }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    Message({\n      message: error.message,\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}